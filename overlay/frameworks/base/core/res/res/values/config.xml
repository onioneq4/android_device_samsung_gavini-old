<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2011, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
    Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>
    
     <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
     The N entries of this array define N + 1 zones as follows:

     Zone 0:        0 <= LUX < array[0]
     Zone 1:        array[0] <= LUX < array[1]
     ...
     Zone N:        array[N - 1] <= LUX < array[N]
     Zone N + 1:    array[N] <= LUX < infinity

     Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>7</item> <!-- (0 - 7) Very dark room -->
        <item>75</item> <!-- (7 - 75) Poor light ambient -->
        <item>1000</item> <!-- (75 - 1000) Indoor / shadows -->
        <item>10000</item> <!--(1000 - 10000) Outdoor, (10000 - 16000 (max lux value)) Sunlight outdoor -->
    </integer-array>
    
    <!-- Array of output values for LCD backlight corresponding to the LUX values
    in the config_autoBrightnessLevels array.  This array should have size one greater
    than the size of the config_autoBrightnessLevels array.
    This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>20</item> <!-- (0 - 7) Very dark room -->
        <item>30</item> <!-- (7 - 75) Poor light ambient -->
        <item>110</item> <!-- (75 - 1000) Indoor / shadows -->
        <item>175</item> <!-- (1000 - 10000) Outdoor-->
        <item>255</item> <!-- (10000 - 16000) Sunlight outdoor -->
    </integer-array>
    
    <!-- Array of output values for button backlight corresponding to the LUX values
    in the config_autoBrightnessLevels array.  This array should have size one greater
    than the size of the config_autoBrightnessLevels array.
    This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>255</item> <!-- (0 - 7) Very dark room -->
        <item>255</item> <!-- (7 - 75) Poor light ambient -->
        <item>255</item> <!-- (75 - 1000) Indoor / shadows -->
        <item>0</item> <!-- (1000 - 10000) Outdoor-->
        <item>0</item> <!-- (10000 - 16000) Sunlight outdoor -->
    </integer-array>
    
    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>
    
    
    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <bool name="config_hotswapCapable">false</bool>

</resources>
